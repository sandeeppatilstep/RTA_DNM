<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Applications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:ra="clr-namespace:ReporterForUiPath.Activities;assembly=ReporterForUiPath.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_TransactionData" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_LogTransactionData" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_LogNumber" Type="OutArgument(x:Int32)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_LogPath" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1323,1715</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>ReporterForUiPath.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>ReporterForUiPath.Enums</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>ReporterForUiPath.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>ReporterForUiPath</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Initialize All Applications" sap:VirtualizedContainerService.HintSize="917,1650" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message (Initialize applications)" sap:VirtualizedContainerService.HintSize="875,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Opening applications...&quot;]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="875,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[in_Config(&quot;Log_Table_Template&quot;).ToString.Trim]" />
    <If Condition="[File.Exists(in_Config(&quot;Log_Table_Template&quot;).ToString.Trim)]" DisplayName="To Check Log Template File Exists" sap:VirtualizedContainerService.HintSize="875,51" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,629" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_LogTransactionData]" DisplayName="Read Range Log Table Template" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Sheet1" WorkbookPath="[in_Config(&quot;Log_Table_Template&quot;).ToString.Trim]" />
          <Assign DisplayName="Assign - str_LogPath" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_LogPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("Output_Path").ToString+"\"+Now.ToString("dd-MMM-yyyy")+"\"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[out_LogPath]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CreateDirectory>
          <Assign DisplayName="Assign - str_FinalOutputPath" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_LogPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[out_LogPath+"Log_Table_"+Now.ToString("dd-MM-yyyy")+".xlsx"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Read log template&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
        </Sequence>
      </If.Then>
      <If.Else>
        <Throw DisplayName="Throw Log Template File Does Not Exists" Exception="[New System.IO.FileNotFoundException(&quot;Log template file does not exists.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
      </If.Else>
    </If>
    <Sequence DisplayName="Retrive Log No" sap:VirtualizedContainerService.HintSize="875,1098" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_FinalOutputPath" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign Output Log File Path" sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_FinalOutputPath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("Output_Path").ToString+"\"+Now.ToString("dd-MMM-yyyy")+"\"+"Log_Table_"+Now.ToString("dd-MM-yyyy")+".xlsx"]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[File.Exists(str_FinalOutputPath)]" DisplayName="To Check Output Log File Path Exists" sap:VirtualizedContainerService.HintSize="833,906" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="526,748" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dtExcelLogNo" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtExcelLogNo]" DisplayName="Read Range Output File" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Sheet1" WorkbookPath="[str_FinalOutputPath]" />
            <Assign DisplayName="Assign Log Number" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[out_LogNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[CInt(dtExcelLogNo.Rows(dtExcelLogNo.Rows.Count-1).Item("Log_No").ToString.Trim)+1]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[in_Config(&quot;IterationNumber&quot;).ToString&lt;&gt;&quot;&quot;]" sap:VirtualizedContainerService.HintSize="484,429" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign Log Number" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[out_LogNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Cint(in_Config("IterationNumber").ToString)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[in_Config("ExcelLogNo")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[out_LogNumber]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <Assign DisplayName="Initialize Log Number" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[out_LogNumber]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">1</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Prepare Input Data" sap:VirtualizedContainerService.HintSize="875,66" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[in_Config(&quot;Config_Source_Database&quot;).ToString.ToLower.Trim.StartsWith(&quot;y&quot;)]" DisplayName="To Check Test Data Source" sap:VirtualizedContainerService.HintSize="1000,499" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Read Test Cases To Be Executed" sap:VirtualizedContainerService.HintSize="376,341" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:DatabaseConnection" Name="DBConnString" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:DatabaseConnect DatabaseConnection="[DBConnString]" DisplayName="Connect Database" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.Odbc" ConnectionString="[&quot;Dsn=&quot;+in_Config(&quot;DSN_Name_Database&quot;).ToString.Trim]" />
            <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[out_TransactionData]" DisplayName="Execute Query To Read Test Case Table" ExistingDbConnection="[DBConnString]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[&quot;select * from RTA_Test_Cases_&quot;+in_Config(&quot;Database_Project_Name&quot;).ToString]">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
            </ui:ExecuteQuery>
            <ui:DatabaseDisconnect DatabaseConnection="[DBConnString]" DisplayName="Disconnect Database" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
          </Sequence>
        </If.Then>
        <If.Else>
          <If Condition="[File.Exists(in_Config(&quot;Test_Data_File&quot;).ToString)]" DisplayName="To Check Test Data File Exists" sap:VirtualizedContainerService.HintSize="579,245" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_TransactionData]" DisplayName="Read Range Test Case File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" PreserveFormat="True" SheetName="[in_Config(&quot;Test_Data_Sheet_Name&quot;).ToString]" WorkbookPath="[in_Config(&quot;Test_Data_File&quot;).ToString]" />
            </If.Then>
            <If.Else>
              <Throw DisplayName="Throw Test Data File Does Not Exists" Exception="[New System.IO.FileNotFoundException(&quot;Test data file does not exists.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </If.Else>
          </If>
        </If.Else>
      </If>
      <ui:FilterDataTable DataTable="[out_TransactionData]" DisplayName="Filter Data Table Pending Cases" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1000,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[out_TransactionData]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["TC_Status"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Pending"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["TC_Status"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["pending"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:RemoveDuplicateRows DataTable="[out_TransactionData.DefaultView.ToTable(True,&quot;TC_ID&quot;,&quot;Test_Case_Scenario&quot;,&quot;Test_Case_Description&quot;,&quot;TC_Status&quot;)]" DisplayName="Remove Duplicate Case ID" sap:VirtualizedContainerService.HintSize="1000,22" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[out_TransactionData]" />
      <ui:FilterDataTable DataTable="[out_TransactionData]" DisplayName="Filter Data Table Empty Rows" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1000,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[out_TransactionData]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
              </ui:FilterOperationArgument.Column>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1000,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Total Number Of Test Case ID To Process: &quot;+out_TransactionData.Rows.Count.ToString]" />
      <ra:LogMessage ContinueOnError="{x:Null}" Text="{x:Null}" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1000,84" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;Total Number Of Test Case ID To Process: &quot;+out_TransactionData.Rows.Count.ToString]" MessageType="Info" />
    </Sequence>
  </Sequence>
</Activity>